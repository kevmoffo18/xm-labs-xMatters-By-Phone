var got = require('got');
const request = require('request');  
const util = require('util');  

exports.handler = function(context, event, callback) {

// Get Settings
var settings = JSON.parse(decodeURI(event.setting));
console.log("EVENT: " + JSON.stringify(event));
console.log("Settings: " + JSON.stringify(settings));
  
  let twiml = new Twilio.twiml.VoiceResponse();
    

    console.log(event.RecordingUrl);
    
    var bitly = {};
    bitly.long_url = event.RecordingUrl;
     console.log("bitly:" + JSON.stringify(bitly));
     
     got.post('https://api-ssl.bitly.com/v4/shorten', {
              body: JSON.stringify(bitly),
              headers: {
                'Content-Type': 'application/json',
                'Authorization' : 'Bearer ' + settings.bitly_token
              }
            })
            .then(function(response) {  
              
              shorturl = JSON.parse(response.body);
              console.log(shorturl.link);
  
              twiml.redirect(settings.xm_message + '?setting=' +  encodeURI(JSON.stringify(settings)) + '&what=' + event.what + '&recipient=' + encodeURI(event.recipient) + '&RecordingUrl=' + event.RecordingUrl + '&shorturl=' + shorturl.link + '&Message_Phrase=' + encodeURI(event.Message_Phrase) + '&RecordingSid=' + event.RecordingSid);
    
              callback(null, twiml);
              
            })
             .catch(function(error) {
                // Boo, there was an error.
                console.log("ERROR: ");
                twiml.say({ voice: 'alice'}, 'There was a problem shortening the recording u.r.l but do not worry, we will proceed with the long one instead.');
                  
                twiml.redirect(settings.xm_message + '?setting=' +  encodeURI(JSON.stringify(settings)) + '&what=' + event.what + '&recipient=' + encodeURI(event.recipient) + '&RecordingUrl=' + event.RecordingUrl + '&shorturl=' + event.RecordingUrl + '&Message_Phrase=' + encodeURI(event.Message_Phrase)   + '&RecordingSid=' + event.RecordingSid);
                  
                callback(null, twiml);
            });
    
    
 


}; // close handler